# Default values for runners.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

runnerDeployments:
  - name: "runners"
    queues: "health,fast,normal"
    pool: "processes"
    cpu_request: 1000m
    cpu_limit: 1500m
    concurrency: 5
    memory_request: 3Gi
    memory_limit: 4Gi
    hpa_metric_name: "normal_queue_job_consumer_ratio"
  - name: "runners-small"
    queues: "health,fast"
    pool: "processes"
    cpu_request: 512m
    cpu_limit: 768m
    concurrency: 2
    memory_request: 1.5Gi
    memory_limit: 2Gi
    hpa_metric_name: "fast_queue_job_consumer_ratio"
  - name: "runners-large"
    queues: "health,slow"
    pool: "processes"
    concurrency: 2
    cpu_request: 1000m
    cpu_limit: 1500m
    memory_request: 6Gi
    memory_limit: 8Gi
    hpa_metric_name: "slow_queue_job_consumer_ratio"

replicaCount: 1

image:
  repository: gcr.io/rungalileo-prod/runners
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: galileo-docker-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 50052

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

cloud:
  vendor: "minio"  # default to minio, can be overridden to s3, gs, exoscale, etc.
  region: "us-east-1"
  endpointURL: "minio.galileo.svc.cluster.local:9000"
