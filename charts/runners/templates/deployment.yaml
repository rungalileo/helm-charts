{{- $root := . -}}
{{- range .Values.runnerDeployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  labels:
    {{- include "runners.labels" $ | nindent 4 }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .name }}
        {{- include "runners.labels" $ | nindent 8 }}
	{{- with $.Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "runners.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .name }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          command:
            - "bash"
            - "-c"
            - 'poetry run celery --app=runners.celery_app.celery_app worker --loglevel="INFO" --concurrency=$CONCURRENCY --queues=$QUEUES'
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $.Values.service.port }}
              protocol: TCP
          env:
            - name: SENTRY_DSN
              value: ""
            - name: GALILEO_APP
              value: {{ .name }}
            - name: GALILEO_RABBITMQ_HOST
              value: "rabbitmq-cluster.{{ $.Release.Namespace }}.svc.cluster.local"
            - name: GALILEO_RABBITMQ_PORT
              value: "5672"
            - name: GALILEO_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cluster-default-user
                  key: username
            - name: GALILEO_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cluster-default-user
                  key: password
            - name: POOL
              value: "{{ .pool }}"
            - name: QUEUES
              value: "{{ .queues }}"
            - name: CONCURRENCY
              value: "{{ .concurrency }}"
            - name: GALILEO_HEADLESS_API_SVC_DNS
              value: "api.{{ $.Release.Namespace }}.svc.cluster.local"
            - name: GALILEO_API_SVC_PORT
              value: "8088"
            - name: GALILEO_RUNNERS_SVC_NAME
              value: "runners.{{ $.Release.Namespace }}.svc.cluster.local"
            - name: GALILEO_RUNNERS_SVC_PORT
              value: "50052"
            - name: GALILEO_WIZARD_SVC_NAME
              value: "wizard.{{ $.Values.galileo_namespace }}.svc.cluster.local"
            - name: GALILEO_WIZARD_SVC_PORT
              value: "8000"
            - name: GALILEO_API_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: GALILEO_API_SECRET_KEY
            - name: CLOUD_VENDOR_OBJECTSTORE
              value: {{ $.Values.cloud.vendor }}
            - name: GALILEO_MINIO_REGION
              value: {{ $.Values.cloud.region }}
            - name: GALILEO_MINIO_FQDN
              value: {{ if eq $.Values.cloud.vendor "s3" }}"s3.amazonaws.com"{{ else if eq $.Values.cloud.vendor "gs" }}"storage.googleapis.com"{{ else }}{{ $.Values.cloud.endpointURL }}{{ end }}
            - name: GALILEO_MINIO_ENDPOINT_URL
              value: {{ $.Values.cloud.endpointURL }}
            - name: GALILEO_MINIO_K8S_SVC_ADDR
              value: {{ $.Values.cloud.endpointURL }}
            - name: GALILEO_MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: rootUser
            - name: GALILEO_MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: rootPassword
            {{- with $.Values.env }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          livenessProbe:
            exec:
              command:
              - "bash"
              - "-c"
              - "poetry run celery --app=runners.celery_app.celery_app inspect ping"
            initialDelaySeconds: 120
            periodSeconds: 60
            timeoutSeconds: 60
          resources:
            requests:
              memory: {{ .memory_request }}
              cpu: {{ .cpu_request }}
          {{- with $.Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with $.Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
