# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gcr.io/rungalileo-dev/api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets:
  - name: galileo-docker-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8088

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  galileo-node-type: galileo-core

tolerations: []

affinity: {}

env: {}
  # Add environment variables here as needed
  # GALILEO_CONSOLE_URL: "https://console.helm-test.rungalileo.io"
  # GALILEO_ADDITIONAL_ORIGINS: "*"
  # GALILEO_HEADLESS_API_SVC_DNS: "api-hs.galileo.svc.cluster.local"
  # GALILEO_RUNNERS_SVC_NAME: "runners-hs.galileo.svc.cluster.local"
  # GALILEO_RUNNERS_SVC_PORT: "50052"

# MinIO configuration: https://github.com/minio/minio/blob/master/helm/minio/values.yaml
minio:
  replicas: 2 # 2 is the minimum
  resources:
  requests:
    memory: 1Gi
  buckets:
    - name: galileo-auto-datasets
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    - name: galileo-images
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    - name: galileo-models
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    - name: galileo-project-runs
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    - name: galileo-project-runs-results
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    - name: galileo-prompts-datasets
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    - name: galileo-prompts-results
      policy: none
      purge: false
      versioning: false
      objectlocking: false

postgres:
  clusterName: "postgres"
  instances: 2
  primaryUpdateStrategy: "supervised"
  storageSize: "2Gi"
