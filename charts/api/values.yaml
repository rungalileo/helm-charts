# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gcr.io/rungalileo-prod/api
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: galileo-docker-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8088"
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8088

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 100m
    memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env: {}
  # Add environment variables here as needed
  # GALILEO_CONSOLE_URL: "https://console.helm-test.rungalileo.io"
  # GALILEO_ADDITIONAL_ORIGINS: "*"
  # GALILEO_HEADLESS_API_SVC_DNS: "api-hs.galileo.svc.cluster.local"
  # GALILEO_RUNNERS_SVC_NAME: "runners-hs.galileo.svc.cluster.local"
  # GALILEO_RUNNERS_SVC_PORT: "50052"

cloud:
  vendor: "minio"  # default to minio, can be overridden to s3, gs, exoscale, etc.
  region: "us-east-1"
  endpointURL: "minio.galileo.svc.cluster.local:9000"

postgres:
  write:
    host: "postgres-rw.galileo.svc.cluster.local"
    port: 5432
  read:
    host: "postgres-r.galileo.svc.cluster.local"
    port: 5432
  clusterName: "postgres"
  instances: 2
  primaryUpdateStrategy: "supervised"
  storageSize: "2Gi"
